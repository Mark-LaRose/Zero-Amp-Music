"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdatemy_new_app"]("main_window",{

/***/ "./src/components/music.jsx":
/*!**********************************!*\
  !*** ./src/components/music.jsx ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var path_browserify__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! path-browserify */ \"./node_modules/path-browserify/index.js\");\n/* harmony import */ var path_browserify__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(path_browserify__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react-redux */ \"./node_modules/react-redux/dist/react-redux.mjs\");\n/* harmony import */ var _redux_playlistSlice__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../redux/playlistSlice */ \"./src/redux/playlistSlice.js\");\n\n\n\n\nconst Music = ({\n  isVisible\n}) => {\n  const dispatch = (0,react_redux__WEBPACK_IMPORTED_MODULE_3__.useDispatch)();\n  const [currentPlaylist, setCurrentPlaylist] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(\"library\");\n  const [songs, setSongs] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);\n  const [selectedSong, setSelectedSong] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n  const [contextMenu, setContextMenu] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)({\n    visible: false,\n    x: 0,\n    y: 0,\n    song: null\n  });\n  const [renameModal, setRenameModal] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)({\n    visible: false,\n    oldName: \"\",\n    newName: \"\"\n  });\n  const [deleteModal, setDeleteModal] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)({\n    visible: false,\n    song: \"\"\n  });\n\n  // Load songs from the current playlist folder\n  const loadSongs = async () => {\n    const baseDir = window.electron.baseDir || \"\";\n    const folderPath = path_browserify__WEBPACK_IMPORTED_MODULE_1___default().join(baseDir, currentPlaylist);\n    try {\n      const {\n        success,\n        files\n      } = await window.electron.fileSystem.readDirectory(folderPath);\n      if (success) {\n        setSongs(files);\n      } else {\n        setSongs([]);\n      }\n    } catch (error) {\n      console.error(\"Error loading songs:\", error);\n      setSongs([]);\n    }\n  };\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    loadSongs();\n  }, [currentPlaylist]);\n  const handleAddMusic = async () => {\n    try {\n      const {\n        canceled,\n        filePaths\n      } = await window.electron.dialog.showOpenDialog({\n        filters: [{\n          name: \"Audio Files\",\n          extensions: [\"mp3\", \"wav\"]\n        }],\n        properties: [\"openFile\", \"multiSelections\"]\n      });\n      if (!canceled && filePaths) {\n        const baseDir = window.electron.baseDir || \"\"; // Defined in preload.js\n        const targetFolder = `${baseDir}\\\\library`;\n        filePaths.forEach(filePath => {\n          const songName = filePath.split(/[/\\\\]/).pop(); // Extract file name\n          const targetPath = `${targetFolder}\\\\${songName}`;\n          window.electron.fileSystem.copyFile(filePath, targetPath);\n          console.log(`File copied: ${filePath} -> ${targetPath}`); // Debugging\n        });\n        loadSongs(); // Refresh song list\n      }\n    } catch (error) {\n      console.error(\"Error adding music:\", error);\n    }\n  };\n  const handleDoubleClick = song => {\n    const baseDir = window.electron.baseDir || \"\"; // Ensure baseDir is defined\n    const songPath = path_browserify__WEBPACK_IMPORTED_MODULE_1___default().join(baseDir, currentPlaylist, song); // Use currentPlaylist\n\n    try {\n      window.electron.audio.play(songPath);\n      dispatch((0,_redux_playlistSlice__WEBPACK_IMPORTED_MODULE_2__.setCurrentSong)(song)); // Update Redux with the current song\n      setSelectedSong(song); // Local state tracking\n      console.log(`Started playing: ${songPath}`);\n    } catch (error) {\n      console.error(\"Error starting playback:\", error);\n    }\n  };\n  const handleRightClick = (event, song) => {\n    event.preventDefault();\n\n    // Get the window height and click position\n    const windowHeight = window.innerHeight;\n    const contextMenuHeight = 150; // Approximate height of the context menu (adjust if needed)\n    const isLowerHalf = event.clientY > windowHeight * 0.6;\n\n    // Set the context menu position dynamically\n    const yPosition = isLowerHalf ? event.clientY - contextMenuHeight // Render upwards\n    : event.clientY; // Render downwards\n\n    setContextMenu({\n      visible: true,\n      x: event.clientX,\n      y: yPosition,\n      song\n    });\n  };\n  const handleAddToPlaylist = playlist => {\n    const baseDir = window.electron.baseDir || \"\";\n    const sourcePath = path_browserify__WEBPACK_IMPORTED_MODULE_1___default().join(baseDir, currentPlaylist, contextMenu.song);\n    const targetPath = path_browserify__WEBPACK_IMPORTED_MODULE_1___default().join(baseDir, playlist, contextMenu.song);\n    window.electron.fileSystem.copyFile(sourcePath, targetPath);\n    setContextMenu({\n      visible: false\n    });\n  };\n  const submitRename = async () => {\n    if (!renameModal?.newName?.trim()) return;\n    const baseDir = window.electron.baseDir || \"\";\n    const oldPath = path_browserify__WEBPACK_IMPORTED_MODULE_1___default().join(baseDir, currentPlaylist, renameModal?.oldName);\n    const newPath = path_browserify__WEBPACK_IMPORTED_MODULE_1___default().join(baseDir, currentPlaylist, renameModal?.newName?.trim());\n    const result = await window.electron.fileSystem.rename(oldPath, newPath);\n    if (result.success) {\n      loadSongs();\n    }\n    setRenameModal({\n      visible: false,\n      oldName: \"\",\n      newName: \"\"\n    });\n  };\n  const confirmDelete = async () => {\n    const baseDir = window.electron.baseDir || \"\";\n    const songPath = path_browserify__WEBPACK_IMPORTED_MODULE_1___default().join(baseDir, currentPlaylist, deleteModal?.song);\n    const result = await window.electron.fileSystem.delete(songPath);\n    if (result.success) {\n      loadSongs();\n    }\n    setDeleteModal({\n      visible: false,\n      song: \"\"\n    });\n  };\n  const closeContextMenu = () => {\n    setContextMenu({\n      visible: false\n    });\n  };\n  const handleSelectSong = song => {\n    dispatch((0,_redux_playlistSlice__WEBPACK_IMPORTED_MODULE_2__.setCurrentSong)(song));\n    setSelectedSong(song);\n  };\n  if (!isVisible) return null;\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"music-window\",\n    onClick: closeContextMenu\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"top-buttons\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"button\", {\n    onClick: () => setCurrentPlaylist(\"library\"),\n    className: currentPlaylist === \"library\" ? \"active\" : \"\"\n  }, \"Library\"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"button\", {\n    onClick: handleAddMusic\n  }, \"Add Music\")), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"playlist-buttons\"\n  }, [\"1\", \"2\", \"3\", \"4\", \"5\"].map((playlist, index) => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"button\", {\n    key: index,\n    onClick: () => setCurrentPlaylist(playlist),\n    className: currentPlaylist === playlist ? \"active\" : \"\"\n  }, playlist))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"ul\", {\n    className: \"song-list\"\n  }, songs.length > 0 ? songs.map((song, index) => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"li\", {\n    key: index,\n    onDoubleClick: () => handleDoubleClick(song),\n    onContextMenu: e => handleRightClick(e, song),\n    onClick: () => handleSelectSong(song),\n    className: `song-item ${selectedSong === song ? \"selected\" : \"\"}`\n  }, song)) : /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"li\", {\n    className: \"song-item\"\n  }, \"No songs found\")), contextMenu.visible && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"context-menu\",\n    style: {\n      top: contextMenu.y,\n      left: contextMenu.x\n    }\n  }, [\"1\", \"2\", \"3\", \"4\", \"5\"].map((playlist, index) => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    key: index,\n    className: \"context-menu-item\",\n    onClick: () => handleAddToPlaylist(playlist)\n  }, \"Add to Playlist \", playlist)), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"context-menu-item\",\n    onClick: () => setRenameModal({\n      visible: true,\n      oldName: contextMenu.song,\n      newName: \"\"\n    })\n  }, \"Rename\"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"context-menu-item\",\n    onClick: () => setDeleteModal({\n      visible: true,\n      song: contextMenu.song\n    })\n  }, \"Delete\")), renameModal.visible && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"modal\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"h3\", null, \"Rename File\"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"input\", {\n    type: \"text\",\n    value: renameModal.newName,\n    onChange: e => setRenameModal({\n      ...renameModal,\n      newName: e.target.value\n    }),\n    placeholder: \"Enter new file name\"\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"button\", {\n    onClick: submitRename\n  }, \"Rename\"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"button\", {\n    onClick: () => setRenameModal({\n      visible: false,\n      oldName: \"\",\n      newName: \"\"\n    })\n  }, \"Cancel\")), deleteModal.visible && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"modal\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"h3\", null, \"Are you sure you want to delete \\\"\", deleteModal.song, \"\\\"?\"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"button\", {\n    onClick: confirmDelete\n  }, \"Delete\"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"button\", {\n    onClick: () => setDeleteModal({\n      visible: false,\n      song: \"\"\n    })\n  }, \"Cancel\")));\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Music);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/components/music.jsx\n");

/***/ })

},
/******/ function(__webpack_require__) { // webpackRuntimeModules
/******/ /* webpack/runtime/getFullHash */
/******/ (() => {
/******/ 	__webpack_require__.h = () => ("ad641e9fabf055448baf")
/******/ })();
/******/ 
/******/ }
);